/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author alumnogreibd
 */
public class CancelarReservaRestaurante extends javax.swing.JFrame {

    private proyectobasesdatos.ProyectoBasesDatos pr;
    private MenuCancelaciones padre;
    String dni;
    
    public CancelarReservaRestaurante(proyectobasesdatos.ProyectoBasesDatos pr, MenuCancelaciones padre, String dni) {
        this.pr = pr;
        this.padre = padre;
        this.dni = dni;
        initComponents();
        MensajeError.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Titulo = new javax.swing.JLabel();
        String[] array = pr.getHosteleriaDAO().establecimientosActivos().toArray(new String[pr.getHosteleriaDAO().establecimientosActivos().size()]);  //MANOTE: hay que pasarle al toArray un array de la misma longitud para que no lo convierta en un array de Objects
        jComboBoxRestaurantes = new javax.swing.JComboBox<>();
        Restaurante = new javax.swing.JLabel();
        Fecha = new javax.swing.JLabel();
        CancelarReserva = new javax.swing.JButton();
        Atras = new javax.swing.JButton();
        jDateChooser = new com.toedter.calendar.JDateChooser();
        MensajeError = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        Titulo.setText("Cancelar Reserva Restaurante");

        jComboBoxRestaurantes.setModel(new javax.swing.DefaultComboBoxModel<>(array));

        Restaurante.setText("Restaurante");

        Fecha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Fecha.setText("Fecha");
        Fecha.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        CancelarReserva.setText("Cancelar compra");
        CancelarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarReservaActionPerformed(evt);
            }
        });

        Atras.setText("Atrás");
        Atras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtrasActionPerformed(evt);
            }
        });

        MensajeError.setForeground(new java.awt.Color(255, 0, 0));
        MensajeError.setText("Debe cubrir todos los campos para poder cancelar la reserva");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MensajeError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Restaurante))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxRestaurantes, 0, 212, Short.MAX_VALUE)
                    .addComponent(jDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Titulo)
                .addGap(111, 111, 111))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(Atras)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CancelarReserva)
                .addGap(49, 49, 49))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(Titulo)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxRestaurantes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Restaurante))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addComponent(MensajeError)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelarReserva)
                    .addComponent(Atras))
                .addGap(29, 29, 29))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void AtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtrasActionPerformed
        this.setVisible(false);
        padre.setVisible(true);
    }//GEN-LAST:event_AtrasActionPerformed

    private void CancelarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarReservaActionPerformed
        // TODO add your handling code here:
        Date date;
        date = jDateChooser.getDate();
        Object o = jComboBoxRestaurantes.getSelectedItem();
        if (o == null || date == null) {
            MensajeError.setVisible(true);
        } else {
            Calendar cal = Calendar.getInstance();
            cal.set(Calendar.HOUR_OF_DAY, 0);
            cal.set(Calendar.MINUTE, 0);
            cal.set(Calendar.SECOND, 0);
            cal.set(Calendar.MILLISECOND, 1);  //MANOTE: No se puede cancelar la compra el mismo día del evento (por cuestiones de administarción del parque)
            Date hoy = cal.getTime();
            if (date.before(hoy)) {
                MensajeError.setVisible(false);
                JOptionPane.showMessageDialog(rootPane, "Fecha anterior a la actual \n No se puede cancelar la reserva");
            } else {
                String restaurante;
                restaurante = o.toString();
                java.sql.Date sqlDate = new java.sql.Date(date.getTime());
                if (!pr.getComerDAO().hayReservaHecha(sqlDate, dni, restaurante)) {
                    MensajeError.setVisible(false);
                    JOptionPane.showMessageDialog(rootPane, "La reserva indicada no fue adquirida por el usuario actual \n No se puede cancelar la compra");
                } else {
                    pr.getComerDAO().cancelarReserva(sqlDate, dni, restaurante);
                    MensajeError.setVisible(false);
                    JOptionPane.showMessageDialog(rootPane, "Cancelación realizada");
                    this.setVisible(false);
                    padre.setVisible(true);
                }
            }
        }
    }//GEN-LAST:event_CancelarReservaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Atras;
    private javax.swing.JButton CancelarReserva;
    private javax.swing.JLabel Fecha;
    private javax.swing.JLabel MensajeError;
    private javax.swing.JLabel Restaurante;
    private javax.swing.JLabel Titulo;
    private javax.swing.JComboBox<String> jComboBoxRestaurantes;
    private com.toedter.calendar.JDateChooser jDateChooser;
    // End of variables declaration//GEN-END:variables
}
