
package GUI;

import java.sql.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author alumnogreibd
 */
public class E1 extends javax.swing.JFrame {

    private proyectobasesdatos.ProyectoBasesDatos pr;
    private MenuUsuarios padre;
    private String dni;

    public E1(proyectobasesdatos.ProyectoBasesDatos pr, MenuUsuarios padre, String dni) {
        this.pr = pr;
        this.padre = padre;
        this.dni = dni;
        initComponents();
        this.buscarEvaluacionesPendientes();
        InfoTablaResumida.setEnabled(false);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CambioTabla = new javax.swing.JButton();
        Puntuar = new javax.swing.JButton();
        Info2 = new javax.swing.JLabel();
        Atras = new javax.swing.JButton();
        InfoButtonSeleccionar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaComidas = new javax.swing.JTable();
        InformacionButton = new javax.swing.JButton();
        Titulo = new javax.swing.JLabel();
        InfoTablaResumida = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CambioTabla.setText("Cambiar a reseñados");
        CambioTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CambioTablaActionPerformed(evt);
            }
        });

        Puntuar.setText("Puntuar Restaurante");
        Puntuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PuntuarActionPerformed(evt);
            }
        });

        Info2.setFont(new java.awt.Font("sansserif", 0, 10)); // NOI18N

        Atras.setText("Atrás");
        Atras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtrasActionPerformed(evt);
            }
        });

        InfoButtonSeleccionar.setText("Ayuda para seleccionar");
        InfoButtonSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InfoButtonSeleccionarActionPerformed(evt);
            }
        });

        TablaComidas.setModel(new ModeloTablaComer());
        jScrollPane2.setViewportView(TablaComidas);

        InformacionButton.setText("Información");
        InformacionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InformacionButtonActionPerformed(evt);
            }
        });

        Titulo.setFont(new java.awt.Font("C059", 2, 24)); // NOI18N
        Titulo.setText("Puntuación de Restaurantes");

        InfoTablaResumida.setText("Mostrar información resumida");
        InfoTablaResumida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InfoTablaResumidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(Atras)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Puntuar)
                .addGap(278, 278, 278))
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(InformacionButton)
                    .addComponent(Info2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(InfoButtonSeleccionar)
                .addGap(257, 257, 257))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CambioTabla, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(InfoTablaResumida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addComponent(Titulo)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(Titulo)
                .addGap(18, 18, 18)
                .addComponent(Info2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InformacionButton)
                    .addComponent(InfoButtonSeleccionar))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CambioTabla)
                        .addGap(29, 29, 29)
                        .addComponent(InfoTablaResumida)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Puntuar)
                    .addComponent(Atras))
                .addGap(62, 62, 62))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PuntuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PuntuarActionPerformed

        int[] filaSeleccionada;

        if (TablaComidas.getRowCount() > 0) {
            if (TablaComidas.getSelectedRowCount() > 0 && TablaComidas.getSelectedRowCount() < 2) {
                filaSeleccionada = TablaComidas.getSelectedRows(); //Así consigo el índice de la fila seleccionada
                
                E1_Puntuar puntuando;
                //Date fechaComida = TablaComidas.getValueAt(filaSeleccionada[0], 0)
                puntuando = new E1_Puntuar(pr, this, (Date)TablaComidas.getValueAt(filaSeleccionada[0], 0), TablaComidas.getValueAt(filaSeleccionada[0], 1).toString(), TablaComidas.getValueAt(filaSeleccionada[0], 2).toString());
                this.setVisible(false);
                puntuando.setVisible(true); //Se evaluará en esa ventana
            } else{
                JOptionPane.showMessageDialog(rootPane,"Debe seleccionar una única fila para poder valorar el servicio recibido");
            }
        }
    }//GEN-LAST:event_PuntuarActionPerformed

    private void InfoButtonSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InfoButtonSeleccionarActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Para seleccionar filas debe clicar en ellas\nPuede seleccionar un conjunto de filas contiguas clicando y arrastrando\nPara seleccionar filas no contiguas use crtl+click");
    }//GEN-LAST:event_InfoButtonSeleccionarActionPerformed

    private void AtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtrasActionPerformed
        this.setVisible(false);
        padre.setVisible(true);
    }//GEN-LAST:event_AtrasActionPerformed

    private void InformacionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InformacionButtonActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Desde aquí puede regalar entradas de atracciones a los visitantes teniendo como información el dinero que han gastado. Pasos a seguir: "
                + "\n\n 1.- Introduzca en el cuadro de texto el número de usuarios con mayor gasto que quiere que se muestren y pulse INTRO"
                + "\n\n 2.- Seleccione a los visitantes que quiera regalarles una entrada (será para el día siguiente al actual y para su atracción favorita)"
                + "\n\n 3.- Pulse Regalar a seleccionados para finalizar esta operación"
        );
    }//GEN-LAST:event_InformacionButtonActionPerformed

    private void CambioTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CambioTablaActionPerformed
        if(CambioTabla.getText().equals("Cambiar a reseñados")){
            buscarEvaluacionesHechas();
            InfoTablaResumida.setEnabled(true);
            CambioTabla.setText("Cambiar a reseñas pendientes");
        } else{
            buscarEvaluacionesPendientes();
            InfoTablaResumida.setEnabled(false);
            CambioTabla.setText("Cambiar a reseñados");
        }
    }//GEN-LAST:event_CambioTablaActionPerformed

    private void InfoTablaResumidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InfoTablaResumidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InfoTablaResumidaActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Atras;
    private javax.swing.JButton CambioTabla;
    private javax.swing.JLabel Info2;
    private javax.swing.JButton InfoButtonSeleccionar;
    private javax.swing.JButton InfoTablaResumida;
    private javax.swing.JButton InformacionButton;
    private javax.swing.JButton Puntuar;
    private javax.swing.JTable TablaComidas;
    private javax.swing.JLabel Titulo;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    public void buscarEvaluacionesPendientes() {

        ModeloTablaComer m;
        m = (ModeloTablaComer) TablaComidas.getModel();
        m.setFilas(pr.getComerDAO().comidasPendientesDeEvaluar(dni));

        if (m.getRowCount() > 0) {
            TablaComidas.setRowSelectionInterval(0, 0); //Para seleccionar el primer elemento
        }
    }

    public void buscarEvaluacionesHechas() {

        ModeloTablaComer m;
        m = (ModeloTablaComer) TablaComidas.getModel();
        m.setFilas(pr.getComerDAO().comidasEvaluadas(dni));
    }
    
    public void buscarEvaluacionesHechasResumen() {

        ModeloTablaComer m;
        m = (ModeloTablaComer) TablaComidas.getModel();
        m.setNombreColumna(0, "Fecha última visita");
        m.setNombreColumna(3, "Puntuación Media");
        m.setFilas(pr.getComerDAO().comidasEvaluadasResumen(dni));
        
    }


}
