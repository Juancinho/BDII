/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import BaseDatos.AtraccionesDAO;

/**
 *
 * @author alumnogreibd
 */
public class Principal extends javax.swing.JFrame {

    private BaseDatos.AtraccionesDAO dao;
    private proyectobasesdatos.ProyectoBasesDatos fa;

    public Principal() {
        initComponents();
    }

    public Principal(proyectobasesdatos.ProyectoBasesDatos fa) {
        this.fa = fa;
        initComponents();
    }

    /*public Principal(baseDatos.DAOJugadores dao) {
        this.dao=dao;
        initComponents();
    }

    public void setDao(DAOJugadores dao) {
        this.dao = dao;
    }
    Descomentar cuando se hagan los dao
    /* 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        salir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAtracciones = new javax.swing.JTable();
        buscaNombre = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        buscarAtraccion = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        buscarAltura = new javax.swing.JTextField();
        buscarConAltura = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });

        tablaAtracciones.setModel(new ModeloTablaAtraccion());
        jScrollPane1.setViewportView(tablaAtracciones);

        jLabel1.setText("Nombre:");

        buscarAtraccion.setText("Buscar");
        buscarAtraccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarAtraccionActionPerformed(evt);
            }
        });

        jLabel2.setText("Altura(cm):");

        buscarAltura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarAlturaActionPerformed(evt);
            }
        });

        buscarConAltura.setText("Buscar Por Altura");
        buscarConAltura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarConAlturaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(347, 347, 347)
                                .addComponent(salir))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(buscaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(buscarAltura, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(246, 246, 246)
                        .addComponent(buscarAtraccion)
                        .addGap(117, 117, 117)
                        .addComponent(buscarConAltura)))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(buscarAltura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscarAtraccion)
                    .addComponent(buscarConAltura))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(salir)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_salirActionPerformed

    private void buscarAtraccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarAtraccionActionPerformed
        buscarAtraccion();
    }//GEN-LAST:event_buscarAtraccionActionPerformed

    private void buscarAlturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarAlturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscarAlturaActionPerformed

    private void buscarConAlturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarConAlturaActionPerformed
        buscarAtraccionPorAltura();
    }//GEN-LAST:event_buscarConAlturaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    public void setDao(AtraccionesDAO dao) {
        this.dao = dao;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField buscaNombre;
    private javax.swing.JTextField buscarAltura;
    private javax.swing.JButton buscarAtraccion;
    private javax.swing.JButton buscarConAltura;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton salir;
    private javax.swing.JTable tablaAtracciones;
    // End of variables declaration//GEN-END:variables

    public void buscarAtraccion() {

        ModeloTablaAtraccion m;

        m = (ModeloTablaAtraccion) tablaAtracciones.getModel();
        m.setFilas(fa.getAtraccionesDAO().consultarAtraccion(buscaNombre.getText()));
        if (m.getRowCount() > 0) {
            tablaAtracciones.setRowSelectionInterval(0, 0);
        }
    }

    public void buscarAtraccionPorAltura() {

        ModeloTablaAtraccion m;
        int altura = 2000; //Si el campo esta vacio, ponemos una altura que permita enseñar todas las atracciones
        if (!buscarAltura.getText().isBlank()) {
            altura = Integer.parseInt(buscarAltura.getText());
        } 
        m = (ModeloTablaAtraccion) tablaAtracciones.getModel();
        m.setFilas(fa.getAtraccionesDAO().consultarAtraccionPorAltura(buscaNombre.getText(), altura));
        if (m.getRowCount() > 0) {
            tablaAtracciones.setRowSelectionInterval(0, 0); 
            
        }
    }
}
